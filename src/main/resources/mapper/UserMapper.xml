<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.hismedicalsystem.model.mapper.UserMapper">

    <select id="getUsers" resultMap="_user">
        select * from ((userrdept ud join user u on u.userid = ud.userid)join dept d on d.deptcode = ud.deptcode)
        <where>
            <if test="userid != null and userid!='' ">
                and u.userid = #{userid}
            </if>
            <if test="username != null and username!='' ">
                and username = #{username}
            </if>
            <if test="pwd != null and pwd!='' ">
                and pwd = #{pwd}
            </if>
            <if test="realname != null and realname!='' ">
                and realname = #{username}
            </if>
            <if test="usercat != null and usercat!='' ">
                and usercat = #{usercat}
            </if>
            <if test="position != null and position!='' ">
                and position = #{position}
            </if>
            <if test="shiftOrNot != null and shiftOrNot!='' ">
                and shiftOrNot = #{shiftOrNot}
            </if>
        </where>
    </select>


    <resultMap type="User" id="_user">
        <id property="userid" column="userid" />
        <result property="username" column="username"/>
        <result property="pwd" column="pwd"/>
        <result property="realname" column="realname"/>
        <result property="usercat" column="usercat"/>
        <result property="position" column="position"/>
        <result property="shiftOrNot" column="shiftOrNot"/>
        <collection property="depts" ofType="Dept">
            <id property="deptcode" column="deptcode" />
            <result property="deptname" column="deptname"/>
            <result property="deptcat" column="deptcat"/>
            <result property="deptclass" column="deptclass"/>
        </collection>
    </resultMap>


    <!--UPDATE-->
    <update id="updateUserInUserRDept">
        <foreach item="item" collection="list" separator=",">
            update userrdept set deptcode = #{item} where userid = #{userid}
        </foreach>
    </update>

    <delete id="deleteUserRDept">
        delete from userrdept where userid = #{userid} and deptcode = #{deptcode}
    </delete>

    <insert id="insertUserRDept">
        insert into userrdept (userid, deptcode) values (#{userid}, #{deptcode})
    </insert>

    <update id="updateUser">
        update user set username = #{username},pwd = #{pwd},realname = #{realname},usercat = #{usercat},position = #{position},shiftOrNot = #{shiftOrNot}
        where userid = #{userid}
    </update>





    <delete id="deleteUser">
        delete from user where userid=#{userid}
    </delete>

    <delete id="deleteUserFromUserRDept">
        delete from userrdept where userid=#{userid}
    </delete>

    <insert id="addUser">
        insert into user (userid,username,pwd,realname,usercat,position,shiftOrNot)
        values (#{userid},#{username},#{pwd},#{realname},#{usercat},#{position},#{shiftOrNot})
    </insert>

    <insert id="addUserToUserRDept" useGeneratedKeys="true" keyProperty="uRid">
        insert into userrdept (userid, deptcode) values
        <foreach item="item" collection="list" separator=",">
            (#{userid}, #{item})
        </foreach>
    </insert>

</mapper>









